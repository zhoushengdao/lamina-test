name: Test Lamina

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0,4,8,12,16,20 * * *"
  workflow_dispatch:

permissions:
  actions: read
  issues: write

jobs:
  test:
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v4

      - run: rustup update
      - uses: taiki-e/install-action@nextest

      - run: cargo run
      - run: cargo nextest run --profile=ci

      - name: Make issue body
        if: ${{ !cancelled() }}
        run: |
          # 创建 issue_body.md 并写入标题
          Set-Content -Path issue_body.md -Value "# Lamina 语言测试"

          # 添加带 UTC 时间戳的测试时间
          Add-Content -Path issue_body.md -Value "- 测试时间：$([System.DateTime]::UtcNow.ToString('yyyy-MM-dd HH:mm:ss')) UTC"

          # 添加带链接的版本信息
          Add-Content -Path issue_body.md -Value "- 测试所用版本：[$env:LAMINA_HASH](https://github.com/Lamina-dev/Lamina/commit/$env:LAMINA_HASH)"

          # 解码 Base64 编码的下载地址
          $decodedDownload = [System.Text.Encoding]::UTF8.GetString(
              [System.Convert]::FromBase64String($env:LAMINA_DOWNLOAD)
          )
          Add-Content -Path issue_body.md -Value "- 预编译文件地址：$decodedDownload"

          # # 添加测试结论
          # $summaryLine = (Get-Content -Path "log.log" | Select-Object -Last 2 | Select-Object -First 1) -replace "test result: ",""
          # Add-Content -Path issue_body.md -Value "- 测试结论：``$summaryLine``"

          # 添加日志下载链接
          Add-Content -Path issue_body.md -Value "- 下载测试日志：无"

          # 添加空行
          Add-Content -Path issue_body.md -Value ""

          # 添加代码块开始标记
          Add-Content -Path issue_body.md -Value '``````'

          # 追加日志文件内容
          Get-Content -Path log.log | Add-Content -Path issue_body.md

          # 添加代码块结束标记
          Add-Content -Path issue_body.md -Value '``````'

      - uses: codecov/test-results-action@v1
        if: ${{ !cancelled() }}
        with:
          file: ./target/nextest/ci/junit.xml
          disable_search: true
          token: ${{ secrets.CODECOV_TOKEN }}
