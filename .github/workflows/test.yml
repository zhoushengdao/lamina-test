name: Test Lamina

on:
  schedule:
    - cron: "0 16/4 * * *"
  workflow_dispatch:

permissions:
  actions: read
  issues: write

jobs:
  build:
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2

      - run: cargo run
        id: main
      - run: cargo test > log.log

      - name: Upload test log
        id: upload_log
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test_log
          path: log.log
          retention-days: 1

      - name: Make issue body
        if: ${{ always() }}
        run: |
          # 创建 issue_body.md 并写入标题
          Set-Content -Path issue_body.md -Value "# Lamina 语言测试"

          # 添加带 UTC 时间戳的测试时间
          Add-Content -Path issue_body.md -Value "- 测试时间：$([System.DateTime]::UtcNow.ToString('yyyy-MM-dd HH:mm:ss')) UTC"

          # 添加带链接的版本信息
          Add-Content -Path issue_body.md -Value "- 测试所用版本：[${{ steps.main.outputs.hash }}](https://github.com/Lamina-dev/Lamina/commit/${{ steps.main.outputs.hash }})"

          # 解码 Base64 编码的下载地址
          $decodedDownload = [System.Text.Encoding]::UTF8.GetString(
              [System.Convert]::FromBase64String("${{ steps.main.outputs.download }}")
          )
          Add-Content -Path issue_body.md -Value "- 预编译文件地址：$decodedDownload"

          try {
              # 获取日志文件总行数
              $lineCount = (Get-Content -Path "log.log" | Measure-Object -Line).Lines
              $summaryLine = Get-Content -Path "log.log" | Select-Object -Last 2 | Select-Object -First 1
              Add-Content -Path issue_body.md -Value "- 测试结论：`$summaryLine`"
          } catch {
              Add-Content -Path issue_body.md -Value "- 测试结论：读取失败 `$($_.Exception.Message)`"
              Write-Error "读取测试结论失败：$_"
          }

          # 添加日志下载链接
          Add-Content -Path issue_body.md -Value "- 下载测试日志：[${{ steps.upload_log.outputs.artifact-url }}](${{ steps.upload_log.outputs.artifact-url }})"

          # 添加空行
          Add-Content -Path issue_body.md -Value ""

          # 添加代码块开始标记
          Add-Content -Path issue_body.md -Value '```'

          # 追加日志文件内容
          Get-Content -Path log.log -Raw | Add-Content -Path issue_body.md

          # 添加代码块结束标记
          Add-Content -Path issue_body.md -Value '```'

      - name: Create a comment
        if: ${{ always() }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: 1
          comment-id: 3192037735
          body-path: issue_body.md
          edit-mode: replace
